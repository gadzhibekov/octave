% Определение параметров задачи
l = 0.8 - 0.1; % Длина области (l = 0.7)
T = 2;        % Время моделирования до 2 единиц
tau = 0.05;   % Шаг по времени
h = 0.1;      % Шаг по пространству

% Создание векторов для пространственного и временного дискретизаций
x = 0:h:l;    % Вектор координат от 0 до l с шагом h
t = 0:tau:T;  % Вектор времени от 0 до T с шагом tau

% Определение количества точек в пространстве и времени
N = length(x); % Количество пространственных узлов
M = length(t); % Количество временных шагов

% Инициализация матрицы для хранения значений температуры
u = zeros(N, M); % Матрица значений температуры, заполненная нулями

% Задание начального распределения температуры
for i = 1:N
    % Линейная интерполяция для задания начальных условий
    u(i, 1) = (3 - 1) * (x(i) - 0.1) / l + 3; % Начальная температура
end

% Задание граничных условий
u(1, :) = 3;   % Левая граница (u(0, t) = 3)
u(N, :) = 1;   % Правая граница (u(l, t) = 1)

% Основной цикл для временной эволюции системы
for n = 1:M-1
    for i = 2:N-1
        % Обновление значения u(i, n+1) на основе предыдущих значений
        u(i, n+1) = u(i, n) + ...
                    tau/h^2 * cos(x(i)) * (u(i+1, n) - 2*u(i, n) + u(i-1, n)) + ... 
                    10 * sin(x(i)) * (1 - exp(-t(n)));
    end
end

% Построение графика результатов
figure; % Создание нового окна для графика
hold on; % Удержание текущего графика для добавления новых данных

% Набор моментов времени для отображения на графике
times_to_plot = [0.5 * tau, 10 * tau, 20 * tau];
for time = times_to_plot
    % Нахождение индекса ближайшего времени в массиве t
    [~, n] = min(abs(t - time)); 
    % Построение графика температуры для выбранного времени
    plot(x, u(:, n), 'DisplayName', sprintf('t = %.2f', time));
end

hold off; % Отпускание текущего графика
xlabel('x');  % Подпись оси x
ylabel('u(x, t)'); % Подпись оси y
title('Приближенное решение задачи теплопрноводности'); % Заголовок графика
legend show; % Показать легенду
grid on; % Включение сетки в графике